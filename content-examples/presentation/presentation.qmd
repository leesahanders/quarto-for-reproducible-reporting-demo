---
title: "Quarto for Reproduceable Reporting: Example presentation (with Confetti!)"
subtitle: ""
author: "Lisa Anders"
title-slide-attributes: 
  data-background-color: white
  data-background-image: _extensions/positslides/assets/backgrounds/title-slide-option-1.png
  data-background-size: contain
format:
  positslides-revealjs: 
    chalkboard: true
    width: "1600"
    height: "900"
    filters:
      - positslides
    footer: <a href="https://github.com/leesahanders/quarto-for-reproducible-reporting-demo/tree/main/content-examples/presentation">uarto-for-reproducible-reporting-demo/tree/main/content-examples/presentation</a>
revealjs-plugins:
  - confetti
---

## Default Slide 

This text size is `normal`. 

:::{.smaller}

This text size is `smaller`. 

:::: {.columns}

::: {.column width="33%"}
**Column 1**

Bullet points

1. Point 1
2. Point 2

:::

::: {.column width="33%"}
**Column 2**

- Link to [external resource](url)

> Blocking comment

:::

::: {.column width="33%"}
**Column 3**

![But what about an image?](https://github.com/allisonhorst/stats-illustrations/raw/main/rstats-artwork/data_cowboy.png){#fig-image fig-align="center" width="30%"}
:::

::::



::: {layout="[2, 10]"}
![](img/Leafey.PNG)


<br>
**Leafey the plant** - Write some intro text about yourself
:::

:::

:::

<center>

::: {.citation style="font-size: 16px"}
This is a citation
:::

</center>

::: {.notes}
We can even add some notes 
:::


## Extensions

Click `c` to launch confetti! 

Extensions are a good way to share theme's across an organization. There are a bunch of publicly available theme extensions [here](https://quarto.org/docs/extensions/listing-revealjs.html) 

The extension needs to be installed: 

```bash
quarto add ArthurData/quarto-confetti
```

It's then referenced from the yaml:

```
title: "My presentation"
format:
  revealjs: default
revealjs-plugins:
  - confetti
```


## Environment

```{r}
sessionInfo()
Sys.getenv()
.libPaths()

# If the sessioninfo package is available, 
# it provides output that is easier to read,
# and can write its results to a file
#sessioninfo:::session_info(to_file = "quarto-session-info-output.txt")
```
