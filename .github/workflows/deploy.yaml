name: connect-publish
run-name: ${{ github.actor }} is testing out GitHub Actions
on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: DEV
        required: true
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  connect-publish-report-mermaid-diagrams:
    name: connect-publish-report-mermaid-diagrams
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-mermaid-diagrams/:report-mermaid-diagrams 
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Report with Mermaid Diagrams"}'
          export CONTENT_NAME='report-mermaid-diagrams'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  connect-publish-website:
    name: connect-publish-website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/website/:website 
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Recipe Website"}'
          export CONTENT_NAME='website'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  connect-publish-report-lightbox:
    name: connect-publish-report-lightbox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-lightbox/:report-lightbox 
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Interactive Visualizations in Quarto"}'
          export CONTENT_NAME='report-lightbox'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  connect-publish-report-hybrid-knitr:
    name: connect-publish-report-hybrid-knitr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-hybrid-knitr/:report-hybrid-knitr
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Report using the Knitr Engine"}'
          export CONTENT_NAME='report-hybrid-knitr'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  connect-publish-report-hybrid-jupyter:
    name: connect-publish-report-hybrid-jupyter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          dir: ./content-examples/report-hybrid-jupyter/:report-hybrid-jupyter
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Report using the Jupyter Engine"}'
          export CONTENT_NAME='report-hybrid-jupyter'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  connect-publish-report-commentable:
    name: connect-publish-report-commentable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-commentable/:report-commentable
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Report with Commenting"}'
          export CONTENT_NAME='report-commentable'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  connect-publish-report-branded:
    name: connect-publish-report-branded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-branded/:report-branded
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Posit Installation Branded Report"}'
          export CONTENT_NAME='report-branded'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  connect-publish-presentation:
    name: connect-publish-presentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/presentation/:presentation
  connect-publish-email-programmatic:
    name: connect-publish-email-programmatic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/email-programmatic/:email-programmatic
  connect-publish-email-plots:
    name: connect-publish-email-plots
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/email-plots/:email-plots
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Public Package Manager Email Metrics and Monitoring"}'
          export CONTENT_NAME='email-plots'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  connect-publish-email-conditional:
    name: connect-publish-email-conditional
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          py-version: 3.10.12
          use-public-rspm: true
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install setup-connect
        uses: rstudio/actions/setup-connect@main
      - name: Setup renv environment
        uses: r-lib/actions/setup-renv@v2
      - name: Install packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::rsconnect 
            any::dplyr
      - name: Install rsconnect package
        run: Rscript --vanilla -e "install.packages('rsconnect', repos=c(CRAN = 'https://packagemanager.posit.co/cran/__linux__/noble/latest'))"
      - name: Version rsconnect package
        run: Rscript --vanilla -e "packageVersion('rsconnect')"
      - name: Update lock file 
        run: Rscript --vanilla -e "renv::snapshot()"
      - name: Create manifest.json
        shell: Rscript {0}
        run: |
          rsconnect::writeManifest()
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/email-conditional/:email-conditional
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Using an RSS feed to send conditional emails when a blog has new posts"}'
          export CONTENT_NAME='email-conditional'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  connect-publish-dashboard:
    name: connect-publish-dashboard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/dashboard/:dashboard
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "My Custom Quarto Dashboard"}'
          export CONTENT_NAME='dashboard'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  notify:
    needs: [connect-publish-dashboard,connect-publish-email-conditional,connect-publish-email-plots,connect-publish-email-programmatic,connect-publish-presentation,connect-publish-report-branded,connect-publish-report-commentable,connect-publish-report-hybrid-jupyter,connect-publish-report-hybrid-knitr,connect-publish-report-lightbox,connect-publish-website,connect-publish-report-mermaid-diagrams]
    name: connect-publish-landing-page
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        env:
          CONNECT_ENV_SET_MYVAR: available-at-runtime
          CONNECT_ENV_SET_CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
          CONNECT_ENV_SET_CONNECT_URL: ${{ secrets.CONNECT_URL }}
          CONNECT_ENV_SET_CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
        with:
          url: ${{ secrets.CONNECT_URL }}
          server: ${{ secrets.CONNECT_SERVER }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: TRUE
          dir: ./content-examples/landing-page/:landing-page   
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Reproduceable Reporting with Quarto Landing Page"}'
          export CONTENT_NAME='landing-page'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

