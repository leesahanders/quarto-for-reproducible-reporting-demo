name: connect-publish
run-name: ${{ github.actor }} is using GitHub Actions for publishing to Connect
on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: DEV
        required: true
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  pub-report-mermaid-diagrams:
    name: pub-report-mermaid-diagrams
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-mermaid-diagrams/:report-mermaid-diagrams 
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Building diagrams using in reports"}'
          export CONTENT_NAME='report-mermaid-diagrams'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
          export DATA2='{"tag_id": "Quarto Report with Mermaid Diagrams"}'
          
  pub-report-parameterized:
    name: pub-report-parameterized
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-parameterized/:report-parameterized
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto reports with parameters"}'
          export CONTENT_NAME='report-parameterized'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
          export DATA2='{"tag_id": "Paramaterized Reports"}'
          
  pub-website:
    name: pub-website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/website/:website 
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Recipe Website"}'
          export CONTENT_NAME='website'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  pub-report-basic:
    name: pub-report-basic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-basic/:report-basic
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Debugging R Environments Writeup"}'
          export CONTENT_NAME='report-basic'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  pub-report-lightbox:
    name: pub-report-lightbox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-lightbox/:report-lightbox 
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Interactive Visualizations with Lightbox"}'
          export CONTENT_NAME='report-lightbox'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
  pub-report-hybrid-knitr:
    name: pub-report-hybrid-knitr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-hybrid-knitr/:report-hybrid-knitr
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Report using the Knitr Engine"}'
          export CONTENT_NAME='report-hybrid-knitr'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-report-hybrid-jupyter:
    name: pub-report-hybrid-jupyter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          dir: ./content-examples/report-hybrid-jupyter/:report-hybrid-jupyter
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Report using the Jupyter Engine"}'
          export CONTENT_NAME='report-hybrid-jupyter'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-report-dynamically-generated:
    name: pub-report-dynamically-generated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          dir: ./content-examples/report-dynamically-generated/:report-dynamically-generated
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Dynamically generating the structure of a Quarto report"}'
          export CONTENT_NAME='report-dynamically-generated'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-report-commentable:
    name: pub-report-commentable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-commentable/:report-commentable
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Report with Utterances Commenting"}'
          export CONTENT_NAME='report-commentable'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-report-branded:
    name: pub-report-branded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/report-branded/:report-branded
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Posit Installation Branded Report"}'
          export CONTENT_NAME='report-branded'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-presentation:
    name: pub-presentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/presentation/:presentation
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Sample Branded Presentation"}'
          export CONTENT_NAME='presentation'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-presentation-webinar:
    name: pub-presentation-webinar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/presentation-webinar/:presentation-webinar
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Reproduceable Reporting with Quarto"}'
          export CONTENT_NAME='presentation-webinar'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-email-programmatic:
    name: pub-email-programmatic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/email-programmatic/:email-programmatic
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Email with Dinner Shopping List Programmatically Generated"}'
          export CONTENT_NAME='email-programmatic'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"
          
  pub-email-plots:
    name: pub-email-plots
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/email-plots/:email-plots
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Email of Public Package Manager Metrics and Monitoring"}'
          export CONTENT_NAME='email-plots'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"


  pub-email-conditional:
    name: pub-email-conditional
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/email-conditional/:email-conditional
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Conditional emails when a RSS feed indicates new blog posts"}'
          export CONTENT_NAME='email-conditional'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-dashboard:
    name: pub-dashboard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/dashboard/:dashboard
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Custom Quarto Dashboard For Daily Reports"}'
          export CONTENT_NAME='dashboard'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  pub-dashboard-spatial:
    name: pub-dashboard-spatial
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        with:
          url: ${{ secrets.CONNECT_URL }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: FALSE
          dir: ./content-examples/dashboard-spatial/:dashboard-spatial
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Quarto Dashboard with UV Spatial Map"}'
          export CONTENT_NAME='dashboard-spatial'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

  notify:
    needs: [pub-dashboard,pub-dashboard-spatial,pub-report-parameterized,pub-email-conditional,pub-report-dynamically-generated,pub-email-plots,pub-email-programmatic,pub-presentation,pub-presentation-webinar,pub-report-basic,pub-report-branded,pub-report-commentable,pub-report-hybrid-jupyter,pub-report-hybrid-knitr,pub-report-lightbox,pub-website,pub-report-mermaid-diagrams]
    name: pub-landing-page
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.3.1
          use-public-rspm: true
      - name: Publish the app to Connect
        uses: rstudio/actions/connect-publish@main
        env:
          CONNECT_ENV_SET_MYVAR: available-at-runtime
          CONNECT_ENV_SET_CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
          CONNECT_ENV_SET_CONNECT_URL: ${{ secrets.CONNECT_URL }}
          CONNECT_ENV_SET_CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
        with:
          url: ${{ secrets.CONNECT_URL }}
          server: ${{ secrets.CONNECT_SERVER }}
          api-key: ${{ secrets.CONNECT_API_KEY }}
          access-type: all
          show-logs: TRUE
          force: TRUE
          dir: ./content-examples/landing-page/:landing-page
      - name: Use Connect API to set content title
        run: |
          export DATA='{"title": "Reproduceable Reporting with Quarto Landing Page"}'
          export CONTENT_NAME='landing-page'
          export contentguid=$(curl -H "Authorization: KEY ${{ secrets.CONNECT_API_KEY }}" ${{ secrets.CONNECT_SERVER }}/__api__/v1/content?name=${CONTENT_NAME} | jq -r '.[].guid')
          echo contentguid
          curl --silent --show-error -L --max-redirs 0 --fail -X PATCH -H "Authorization: Key ${{ secrets.CONNECT_API_KEY }}" --data "${DATA}" "${{ secrets.CONNECT_SERVER }}__api__/v1/content/${contentguid}"

